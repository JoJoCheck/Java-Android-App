Index: app/src/main/java/com/example/cargame/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cargame;\r\n\r\nimport android.app.Activity;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\n\r\npublic class Game {\r\n    public ArrayList<Obstacle>[] lanes = new ArrayList[3];\r\n\r\n    private int gameSpeed;\r\n    private int points;\r\n\r\n    private Timer timer = new Timer();\r\n\r\n    private boolean gameIsRunning;\r\n\r\n    private int time;\r\n\r\n    private Player player;\r\n\r\n    public ViewGroup group;\r\n    public Random random = new Random();\r\n\r\n    private Activity activity;\r\n\r\n    private ImageView original;\r\n    private ViewGroup.LayoutParams layout;\r\n\r\n    private int firstLane = 220;\r\n    private int secondLane = firstLane+300;\r\n    private int thirdLane = secondLane+300;\r\n\r\n\r\n    public Game(Activity activity){\r\n\r\n        lanes[0] = new ArrayList<>();\r\n        lanes[1] = new ArrayList<>();\r\n        lanes[2] = new ArrayList<>();\r\n        this.group = activity.findViewById(R.id.cl);\r\n        this.activity = activity;\r\n        time = 0;\r\n        gameSpeed = 3;\r\n        points = 0;\r\n        gameIsRunning = true;\r\n     //   group.removeView(group.findViewById(R.id.button));\r\n        buttonChange();\r\n\r\n        original = group.findViewById(R.id.original_car);\r\n        layout = original.getLayoutParams();\r\n        createPlayer();\r\n        movePlayerLeft();\r\n        movePlayerRight();\r\n        timer.scheduleAtFixedRate(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                if (gameIsRunning) loop();\r\n            }\r\n        }, 0, 1000/30);\r\n    }\r\n\r\n    public void loop() {\r\n\r\n        time++;\r\n\r\n        addPoint();\r\n        moveObstaclesDown();\r\n        carCrash();\r\n        if(time % 100 == 0){\r\n            addObstacleRandom();\r\n        }\r\n\r\n        updateAll();\r\n\r\n    }\r\n    public void moveObstaclesDown(){\r\n        for(int j = 0; j< 3; j++) {\r\n            for (int i = 0; i < lanes[j].size(); i++) {\r\n                lanes[j].get(i).setPosition(lanes[j].get(i).getPosition() + gameSpeed);\r\n                //Position die vorherige plus Speed setzen\r\n                if(lanes[j].get(i).getPosition() == 2400){\r\n                    removeObstacle(j, lanes[j].get(i));\r\n                    //Objekte wenn sie am Rand sind entfernen\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void movePlayerRight(){\r\n        Button moveRightButton = group.findViewById(R.id.rightbutton);\r\n        moveRightButton.setOnClickListener (v -> {\r\n            player.moveRight();\r\n        } );\r\n    }\r\n    public void movePlayerLeft(){\r\n        Button moveLeftButton = group.findViewById(R.id.leftbutton);\r\n        moveLeftButton.setOnClickListener(v -> {\r\n            player.moveLeft();\r\n        } );\r\n    }\r\n    public void addPoint(){\r\n        activity.runOnUiThread(\r\n                () -> {\r\n                    TextView number = group.findViewById(R.id.pointScore);\r\n                    setPoints(getPoints()+1);\r\n                    number.setText(Integer.toString(getPoints()));\r\n                }\r\n        );\r\n    }\r\n\r\n\r\n    public void addObstacle(int lane){\r\n        if(lane < 0 || lane > 2){throw new RuntimeException(\"nicht vorhandene Lane\");}\r\n        int id = View.generateViewId();\r\n        Obstacle obst = new Obstacle();\r\n        obst.setId(id);\r\n        lanes[lane].add(obst);\r\n\r\n        activity.runOnUiThread(\r\n                () -> {\r\n                    ImageView view = new ImageView(group.getContext());\r\n                    switch (random.nextInt(4)){\r\n                        case 0:\r\n                            view.setImageResource(R.drawable.auto_blau_final);\r\n                            break;\r\n                        case 1:\r\n                            view.setImageResource(R.drawable.auto_gr_n);\r\n                            break;\r\n                        case 2:\r\n                            view.setImageResource(R.drawable.auto_rot_final);\r\n                            break;\r\n                        case 3:\r\n                            view.setImageResource(R.drawable.auto_grau);\r\n                            break;\r\n                    }\r\n                    view.setId(id);\r\n                    view.setLayoutParams(new ViewGroup.LayoutParams(this.layout));\r\n                    group.addView(view);\r\n                    ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)view.getLayoutParams();\r\n                    params.leftToLeft = group.getId();\r\n                    params.topToTop = original.getId();\r\n                    switch (lane){\r\n                        case 0:\r\n                            params.leftMargin = firstLane;\r\n                            break;\r\n                        case 1:\r\n                            params.leftMargin = secondLane;\r\n                            break;\r\n                        case 2:\r\n                            params.leftMargin = thirdLane;\r\n                            break;\r\n                    }\r\n                    view.requestLayout();\r\n                }\r\n        );\r\n\r\n    }\r\n    public void addObstacleRandom(){\r\n        addObstacle(random.nextInt(3));\r\n    }\r\n    public void removeObstacle(int lane, Obstacle obst){\r\n        lanes[lane].remove(obst);\r\n    }\r\n\r\n    public int getGameSpeed() {\r\n        return gameSpeed;\r\n    }\r\n\r\n    public void setGameSpeed(int gameSpeed) {\r\n        this.gameSpeed = gameSpeed;\r\n    }\r\n\r\n    public int getPoints(){\r\n        return points;\r\n    }\r\n\r\n    public void setPoints(int points){\r\n        this.points = points;\r\n    }\r\n\r\n    public void carCrash() {\r\n        if (collision()) {\r\n            gameIsRunning = false;\r\n            System.out.println(\" -- Crash -- \");\r\n            Button restart = group.findViewById(R.id.button);\r\n            restart.setText(\"Restart\");\r\n            restart.setVisibility(View.VISIBLE);\r\n            //new Game(activity);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    public boolean collision(){\r\n        for (int i = 0; i < lanes.length; i++){\r\n            if (player.getLane() != i) continue;\r\n            for(Obstacle obstacle : lanes[i]){\r\n                System.out.println(obstacle.getPosition());\r\n                if (obstacle.getPosition() <= 700 && obstacle.getPosition() >= 800){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public View findViewOfObstacle(Obstacle obst){\r\n        return group.findViewById(obst.getId());\r\n    }\r\n\r\n    public void updateAll(){\r\n\r\n        for(int i = 0; i < lanes.length; i++){\r\n            for (int j = 0; j < lanes[i].size(); j++){\r\n                Obstacle o = lanes[i].get(j);\r\n                if (findViewOfObstacle(o) == null) continue;\r\n                findViewOfObstacle(o).setY(o.getPosition());\r\n\r\n            }\r\n        }\r\n\r\n        ImageView playerView = group.findViewById(player.getId());\r\n        switch (player.getLane()){\r\n            case 0: playerView.setX(firstLane);\r\n            break;\r\n            case 1: playerView.setX(secondLane);\r\n            break;\r\n            case 2: playerView.setX(thirdLane);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void buttonChange(){\r\n        Button startGameButton = group.findViewById(R.id.button);\r\n        Button leftButton = group.findViewById(R.id.leftbutton);\r\n        Button rightButton = group.findViewById(R.id.rightbutton);\r\n        startGameButton.setVisibility(View.GONE);\r\n        leftButton.setVisibility(View.VISIBLE);\r\n        rightButton.setVisibility(View.VISIBLE);\r\n\r\n    }\r\n\r\n\r\n    public void createPlayer(){\r\n\r\n        int id = View.generateViewId();\r\n        this.player = new Player();\r\n        player.setId(id);\r\n        player.setLane(2);\r\n\r\n        activity.runOnUiThread(\r\n                () -> {\r\n                    ImageView view = new ImageView(group.getContext());\r\n                    view.setImageResource(R.drawable.player_rennauto);\r\n\r\n                    view.setId(id);\r\n                    view.setLayoutParams(new ViewGroup.LayoutParams(this.layout));\r\n                    group.addView(view);\r\n                    ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)view.getLayoutParams();\r\n                    params.leftToLeft = group.getId();\r\n                    params.topToTop = original.getId();\r\n\r\n                    params.leftMargin = secondLane;\r\n\r\n                    view.requestLayout();\r\n                    view.setY(700);\r\n                }\r\n        );\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cargame/Game.java b/app/src/main/java/com/example/cargame/Game.java
--- a/app/src/main/java/com/example/cargame/Game.java	(revision 52c17f746c7fcaf00d39c635465fa518daa5aeef)
+++ b/app/src/main/java/com/example/cargame/Game.java	(date 1679487982648)
@@ -59,7 +59,6 @@
 
         original = group.findViewById(R.id.original_car);
         layout = original.getLayoutParams();
-        createPlayer();
         movePlayerLeft();
         movePlayerRight();
         timer.scheduleAtFixedRate(new TimerTask() {
@@ -169,6 +168,7 @@
         addObstacle(random.nextInt(3));
     }
     public void removeObstacle(int lane, Obstacle obst){
+        System.out.println("removed");
         lanes[lane].remove(obst);
     }
 
@@ -206,8 +206,7 @@
         for (int i = 0; i < lanes.length; i++){
             if (player.getLane() != i) continue;
             for(Obstacle obstacle : lanes[i]){
-                System.out.println(obstacle.getPosition());
-                if (obstacle.getPosition() <= 700 && obstacle.getPosition() >= 800){
+                if (obstacle.getPosition() <= 1800 && obstacle.getPosition() >= 1700){
                     return true;
                 }
             }
@@ -253,30 +252,4 @@
     }
 
 
-    public void createPlayer(){
-
-        int id = View.generateViewId();
-        this.player = new Player();
-        player.setId(id);
-        player.setLane(2);
-
-        activity.runOnUiThread(
-                () -> {
-                    ImageView view = new ImageView(group.getContext());
-                    view.setImageResource(R.drawable.player_rennauto);
-
-                    view.setId(id);
-                    view.setLayoutParams(new ViewGroup.LayoutParams(this.layout));
-                    group.addView(view);
-                    ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)view.getLayoutParams();
-                    params.leftToLeft = group.getId();
-                    params.topToTop = original.getId();
-
-                    params.leftMargin = secondLane;
-
-                    view.requestLayout();
-                    view.setY(700);
-                }
-        );
-    }
 }
