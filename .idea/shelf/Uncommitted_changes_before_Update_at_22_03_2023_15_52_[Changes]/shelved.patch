Index: app/src/main/java/com/example/cargame/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cargame;\r\n\r\nimport android.view.View;\r\n\r\npublic class Player {\r\n    //0: linke Spur, 1: mittlere Spur, 2: rechte Spur\r\n    private int lane;\r\n\r\n    private int id;\r\n\r\n    public Player(){\r\n        this.lane = 1;\r\n    }\r\n\r\n    public int getLane() {\r\n        return lane;\r\n    }\r\n\r\n    public void setLane(int lane) {\r\n        if (lane>=0 && lane<=2) {\r\n            this.lane = lane;\r\n        } else {\r\n            throw new RuntimeException(\"Spur exisiert nicht!\");\r\n        }\r\n    }\r\n\r\n    public void moveRight(){\r\n        if (lane==0 || lane==1) {\r\n            this.lane ++;\r\n        }\r\n    }\r\n\r\n    public void moveLeft(){\r\n        if (lane==1 || lane==2) {\r\n            this.lane --;\r\n        }\r\n    }\r\n\r\n    public void setId(int id){\r\n        this.id = id;\r\n    }\r\n\r\n    public int getId(){\r\n        return id;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cargame/Player.java b/app/src/main/java/com/example/cargame/Player.java
--- a/app/src/main/java/com/example/cargame/Player.java	(revision 8fca8c512ce55cde8244416c8cf4e2b8f10b9afb)
+++ b/app/src/main/java/com/example/cargame/Player.java	(date 1679491098525)
@@ -35,12 +35,4 @@
             this.lane --;
         }
     }
-
-    public void setId(int id){
-        this.id = id;
-    }
-
-    public int getId(){
-        return id;
-    }
 }
Index: app/src/main/java/com/example/cargame/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cargame;\r\n\r\nimport android.app.Activity;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\n\r\npublic class Game {\r\n    public ArrayList<Obstacle>[] lanes = new ArrayList[3];\r\n\r\n    private int gameSpeed;\r\n    private int points;\r\n\r\n    private Timer timer = new Timer();\r\n\r\n    private boolean gameIsRunning;\r\n\r\n    private int time;\r\n\r\n    private Player player;\r\n\r\n    public ViewGroup group;\r\n    public Random random = new Random();\r\n\r\n    private Activity activity;\r\n\r\n    private ImageView original;\r\n    private ViewGroup.LayoutParams layout;\r\n\r\n    private int firstLane = 180;\r\n    private int secondLane = firstLane+300;\r\n    private int thirdLane = secondLane+300;\r\n\r\n\r\n    public Game(Activity activity){\r\n\r\n        lanes[0] = new ArrayList<>();\r\n        lanes[1] = new ArrayList<>();\r\n        lanes[2] = new ArrayList<>();\r\n        this.group = activity.findViewById(R.id.cl);\r\n        this.activity = activity;\r\n        time = 0;\r\n        gameSpeed = 3;\r\n        points = 0;\r\n        gameIsRunning = true;\r\n     //   group.removeView(group.findViewById(R.id.button));\r\n        buttonChange();\r\n        player = new Player();\r\n        original = group.findViewById(R.id.original_car);\r\n        layout = original.getLayoutParams();\r\n        movePlayerLeft();\r\n        movePlayerRight();\r\n        timer.scheduleAtFixedRate(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                if (gameIsRunning) loop();\r\n            }\r\n        }, 0, 1000/30);\r\n    }\r\n\r\n    public void loop() {\r\n\r\n        time++;\r\n\r\n        addPoint();\r\n        moveObstaclesDown();\r\n        carCrash();\r\n        if(time % 100 == 0){\r\n            addObstacleRandom();\r\n        }\r\n\r\n        updateAll();\r\n\r\n    }\r\n    public void moveObstaclesDown(){\r\n        for(int j = 0; j< 3; j++) {\r\n            for (int i = 0; i < lanes[j].size(); i++) {\r\n                lanes[j].get(i).setPosition(lanes[j].get(i).getPosition() + gameSpeed);\r\n                //Position die vorherige plus Speed setzen\r\n                if(lanes[j].get(i).getPosition() == 2400){\r\n                    removeObstacle(j, lanes[j].get(i));\r\n                    //Objekte wenn sie am Rand sind entfernen\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void movePlayerRight(){\r\n        Button moveRightButton = group.findViewById(R.id.rightbutton);\r\n        moveRightButton.setOnClickListener (v -> {\r\n            player.moveRight();\r\n        } );\r\n    }\r\n    public void movePlayerLeft(){\r\n        Button moveLeftButton = group.findViewById(R.id.leftbutton);\r\n        moveLeftButton.setOnClickListener(v -> {\r\n            player.moveLeft();\r\n        } );\r\n    }\r\n    public void addPoint(){\r\n        activity.runOnUiThread(\r\n                () -> {\r\n                    TextView number = group.findViewById(R.id.pointScore);\r\n                    setPoints(getPoints()+1);\r\n                    number.setText(Integer.toString(getPoints()));\r\n                }\r\n        );\r\n    }\r\n\r\n    public void addObstacleRandom(){\r\n        addObstacle(random.nextInt(3));\r\n        System.out.println(\"new\");\r\n    }\r\n\r\n    public void addObstacle(int lane){\r\n        if(lane < 0 || lane > 2){throw new RuntimeException(\"nicht vorhandene Lane\");}\r\n        int id = View.generateViewId();\r\n        Obstacle obst = new Obstacle();\r\n        obst.setId(id);\r\n        lanes[lane].add(obst);\r\n\r\n        activity.runOnUiThread(\r\n                () -> {\r\n                    ImageView view = new ImageView(group.getContext());\r\n                    switch (random.nextInt(4)){\r\n                        case 0:\r\n                            view.setImageResource(R.drawable.auto_blau_final);\r\n                            break;\r\n                        case 1:\r\n                            view.setImageResource(R.drawable.auto_gr_n);\r\n                            break;\r\n                        case 2:\r\n                            view.setImageResource(R.drawable.auto_rot_final);\r\n                            break;\r\n                        case 3:\r\n                            view.setImageResource(R.drawable.auto_grau);\r\n                            break;\r\n                    }\r\n                    view.setId(id);\r\n                    view.setLayoutParams(new ViewGroup.LayoutParams(this.layout));\r\n                    group.addView(view);\r\n                    ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)view.getLayoutParams();\r\n                    params.leftToLeft = group.getId();\r\n                    params.topToTop = original.getId();\r\n                    switch (lane){\r\n                        case 0:\r\n                            params.leftMargin = firstLane;\r\n                            break;\r\n                        case 1:\r\n                            params.leftMargin = secondLane;\r\n                            break;\r\n                        case 2:\r\n                            params.leftMargin = thirdLane;\r\n                            break;\r\n                    }\r\n                    view.requestLayout();\r\n                }\r\n        );\r\n\r\n    }\r\n\r\n    public void removeObstacle(int lane, Obstacle obst){\r\n        lanes[lane].remove(obst);\r\n        activity.runOnUiThread(\r\n                ()-> {\r\n                    group.removeView(group.findViewById(obst.getId()));\r\n                }\r\n        );\r\n\r\n        System.out.println(\"removed\");\r\n    }\r\n\r\n    public int getGameSpeed() {\r\n        return gameSpeed;\r\n    }\r\n\r\n    public void setGameSpeed(int gameSpeed) {\r\n        this.gameSpeed = gameSpeed;\r\n    }\r\n\r\n    public int getPoints(){\r\n        return points;\r\n    }\r\n\r\n    public void setPoints(int points){\r\n        this.points = points;\r\n    }\r\n\r\n    public void carCrash() {\r\n        if (collision()) {\r\n            gameIsRunning = false;\r\n            System.out.println(\" -- Crash -- \");\r\n            Button restart = group.findViewById(R.id.button);\r\n            restart.setText(\"Restart\");\r\n            restart.setVisibility(View.VISIBLE);\r\n            //new Game(activity);\r\n        }\r\n    }\r\n\r\n    public boolean collision(){\r\n        for (int i = 0; i < lanes.length; i++){\r\n            if (player.getLane() != i) continue;\r\n            for(Obstacle obstacle : lanes[i]){\r\n                if (obstacle.getPosition() <= 700 && obstacle.getPosition() >= 800){\r\n                    System.out.println(\"rwet\");\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public View findViewOfObstacle(Obstacle obst){\r\n        return group.findViewById(obst.getId());\r\n    }\r\n\r\n    public void updateAll(){\r\n\r\n        for(int i = 0; i < lanes.length; i++){\r\n            for (int j = 0; j < lanes[i].size(); j++){\r\n                Obstacle o = lanes[i].get(j);\r\n                if (findViewOfObstacle(o) == null) continue;\r\n                findViewOfObstacle(o).setY(o.getPosition());\r\n\r\n            }\r\n        }\r\n\r\n        ImageView playerView = group.findViewById(R.id.player);\r\n        int offset = 32;\r\n        switch (player.getLane()){\r\n            case 0: playerView.setX(firstLane-offset);\r\n            break;\r\n            case 1: playerView.setX(secondLane-offset);\r\n            break;\r\n            case 2: playerView.setX(thirdLane-offset);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void buttonChange(){\r\n        Button startGameButton = group.findViewById(R.id.button);\r\n        Button leftButton = group.findViewById(R.id.leftbutton);\r\n        Button rightButton = group.findViewById(R.id.rightbutton);\r\n        startGameButton.setVisibility(View.GONE);\r\n        leftButton.setVisibility(View.VISIBLE);\r\n        rightButton.setVisibility(View.VISIBLE);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cargame/Game.java b/app/src/main/java/com/example/cargame/Game.java
--- a/app/src/main/java/com/example/cargame/Game.java	(revision 8fca8c512ce55cde8244416c8cf4e2b8f10b9afb)
+++ b/app/src/main/java/com/example/cargame/Game.java	(date 1679495476195)
@@ -17,6 +17,8 @@
 
 
 public class Game {
+
+    private int JonaCounter;
     public ArrayList<Obstacle>[] lanes = new ArrayList[3];
 
     private int gameSpeed;
@@ -39,22 +41,22 @@
     private ViewGroup.LayoutParams layout;
 
     private int firstLane = 180;
-    private int secondLane = firstLane+300;
-    private int thirdLane = secondLane+300;
+    private int secondLane = firstLane + 300;
+    private int thirdLane = secondLane + 300;
 
 
-    public Game(Activity activity){
+    public Game(Activity activity) {
 
         lanes[0] = new ArrayList<>();
         lanes[1] = new ArrayList<>();
         lanes[2] = new ArrayList<>();
-        this.group = activity.findViewById(R.id.cl);
         this.activity = activity;
+        this.group = this.activity.findViewById(R.id.cl);
         time = 0;
-        gameSpeed = 3;
+        gameSpeed = 50;
         points = 0;
         gameIsRunning = true;
-     //   group.removeView(group.findViewById(R.id.button));
+        //   group.removeView(group.findViewById(R.id.button));
         buttonChange();
         player = new Player();
         original = group.findViewById(R.id.original_car);
@@ -64,9 +66,10 @@
         timer.scheduleAtFixedRate(new TimerTask() {
             @Override
             public void run() {
-                if (gameIsRunning) loop();
+                System.out.println("NEW THREAD");
+                while (gameIsRunning) loop();
             }
-        }, 0, 1000/30);
+        }, 0, 1000 / 60);
     }
 
     public void loop() {
@@ -76,54 +79,62 @@
         addPoint();
         moveObstaclesDown();
         carCrash();
-        if(time % 100 == 0){
+        if (time % 20 == 0) {
             addObstacleRandom();
         }
 
         updateAll();
 
     }
-    public void moveObstaclesDown(){
-        for(int j = 0; j< 3; j++) {
+
+    public void moveObstaclesDown() {
+        for (int j = 0; j < 3; j++) {
             for (int i = 0; i < lanes[j].size(); i++) {
                 lanes[j].get(i).setPosition(lanes[j].get(i).getPosition() + gameSpeed);
                 //Position die vorherige plus Speed setzen
-                if(lanes[j].get(i).getPosition() == 2400){
+                if (lanes[j].get(i).getPosition() >= 2400) {
                     removeObstacle(j, lanes[j].get(i));
                     //Objekte wenn sie am Rand sind entfernen
                 }
             }
         }
     }
-    public void movePlayerRight(){
+
+    public void movePlayerRight() {
         Button moveRightButton = group.findViewById(R.id.rightbutton);
-        moveRightButton.setOnClickListener (v -> {
+        moveRightButton.setOnClickListener(v -> {
             player.moveRight();
-        } );
+        });
     }
-    public void movePlayerLeft(){
+
+    public void movePlayerLeft() {
         Button moveLeftButton = group.findViewById(R.id.leftbutton);
         moveLeftButton.setOnClickListener(v -> {
             player.moveLeft();
-        } );
+        });
     }
-    public void addPoint(){
+
+    public void addPoint() {
         activity.runOnUiThread(
                 () -> {
                     TextView number = group.findViewById(R.id.pointScore);
-                    setPoints(getPoints()+1);
+                    setPoints(getPoints() + 1);
                     number.setText(Integer.toString(getPoints()));
                 }
         );
     }
 
-    public void addObstacleRandom(){
+    public void addObstacleRandom() {
         addObstacle(random.nextInt(3));
         System.out.println("new");
+        JonaCounter++;
+        System.out.println(JonaCounter);
     }
 
-    public void addObstacle(int lane){
-        if(lane < 0 || lane > 2){throw new RuntimeException("nicht vorhandene Lane");}
+    public void addObstacle(int lane) {
+        if (lane < 0 || lane > 2) {
+            throw new RuntimeException("nicht vorhandene Lane");
+        }
         int id = View.generateViewId();
         Obstacle obst = new Obstacle();
         obst.setId(id);
@@ -132,7 +143,7 @@
         activity.runOnUiThread(
                 () -> {
                     ImageView view = new ImageView(group.getContext());
-                    switch (random.nextInt(4)){
+                    switch (random.nextInt(4)) {
                         case 0:
                             view.setImageResource(R.drawable.auto_blau_final);
                             break;
@@ -149,10 +160,10 @@
                     view.setId(id);
                     view.setLayoutParams(new ViewGroup.LayoutParams(this.layout));
                     group.addView(view);
-                    ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)view.getLayoutParams();
+                    ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams) view.getLayoutParams();
                     params.leftToLeft = group.getId();
                     params.topToTop = original.getId();
-                    switch (lane){
+                    switch (lane) {
                         case 0:
                             params.leftMargin = firstLane;
                             break;
@@ -169,10 +180,10 @@
 
     }
 
-    public void removeObstacle(int lane, Obstacle obst){
+    public void removeObstacle(int lane, Obstacle obst) {
         lanes[lane].remove(obst);
         activity.runOnUiThread(
-                ()-> {
+                () -> {
                     group.removeView(group.findViewById(obst.getId()));
                 }
         );
@@ -188,11 +199,11 @@
         this.gameSpeed = gameSpeed;
     }
 
-    public int getPoints(){
+    public int getPoints() {
         return points;
     }
 
-    public void setPoints(int points){
+    public void setPoints(int points) {
         this.points = points;
     }
 
@@ -207,27 +218,24 @@
         }
     }
 
-    public boolean collision(){
-        for (int i = 0; i < lanes.length; i++){
-            if (player.getLane() != i) continue;
-            for(Obstacle obstacle : lanes[i]){
-                if (obstacle.getPosition() <= 700 && obstacle.getPosition() >= 800){
-                    System.out.println("rwet");
-                    return true;
-                }
+    public boolean collision() {
+        for (Obstacle obstacle : lanes[player.getLane()]) {
+            if (obstacle.getPosition() <= 700 && obstacle.getPosition() >= 800) {
+                System.out.println("rwet");
+                return true;
             }
         }
         return false;
     }
 
-    public View findViewOfObstacle(Obstacle obst){
+    public View findViewOfObstacle(Obstacle obst) {
         return group.findViewById(obst.getId());
     }
 
-    public void updateAll(){
+    public void updateAll() {
 
-        for(int i = 0; i < lanes.length; i++){
-            for (int j = 0; j < lanes[i].size(); j++){
+        for (int i = 0; i < lanes.length; i++) {
+            for (int j = 0; j < lanes[i].size(); j++) {
                 Obstacle o = lanes[i].get(j);
                 if (findViewOfObstacle(o) == null) continue;
                 findViewOfObstacle(o).setY(o.getPosition());
@@ -237,18 +245,21 @@
 
         ImageView playerView = group.findViewById(R.id.player);
         int offset = 32;
-        switch (player.getLane()){
-            case 0: playerView.setX(firstLane-offset);
-            break;
-            case 1: playerView.setX(secondLane-offset);
-            break;
-            case 2: playerView.setX(thirdLane-offset);
+        switch (player.getLane()) {
+            case 0:
+                playerView.setX(firstLane - offset);
+                break;
+            case 1:
+                playerView.setX(secondLane - offset);
+                break;
+            case 2:
+                playerView.setX(thirdLane - offset);
         }
 
 
     }
 
-    public void buttonChange(){
+    public void buttonChange() {
         Button startGameButton = group.findViewById(R.id.button);
         Button leftButton = group.findViewById(R.id.leftbutton);
         Button rightButton = group.findViewById(R.id.rightbutton);
Index: app/src/main/java/com/example/cargame/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cargame;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        /*ViewGroup group = findViewById(R.id.cl);\r\n        ImageView original = findViewById(R.id.original_car);\r\n        ViewGroup.LayoutParams layout = original.getLayoutParams();\r\n        int firstLane = 220;\r\n        int id = View.generateViewId();\r\n\r\n        ImageView view = new ImageView(this);\r\n        view.setImageResource(R.drawable.auto_blau_final);\r\n        view.setId(id);\r\n        view.setLayoutParams(new ViewGroup.LayoutParams(layout));\r\n        group.addView(view);\r\n        ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)view.getLayoutParams();\r\n        params.leftToLeft = group.getId();\r\n        params.topToTop = original.getId();\r\n        view.requestLayout();\r\n        /*ImageView banner = findViewById(R.id.original_car);\r\n        String s = \"\" + banner.getTranslationZ();\r\n        Toast toast = Toast.makeText(this, s, Toast.LENGTH_SHORT);\r\n        toast.show();*/\r\n\r\n        startGame();\r\n    }\r\n\r\n    protected void startGame(){\r\n        Button startGameButton = findViewById(R.id.button);\r\n        startGameButton.setOnClickListener(v -> {\r\n            Game game = new Game(this);\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cargame/MainActivity.java b/app/src/main/java/com/example/cargame/MainActivity.java
--- a/app/src/main/java/com/example/cargame/MainActivity.java	(revision 8fca8c512ce55cde8244416c8cf4e2b8f10b9afb)
+++ b/app/src/main/java/com/example/cargame/MainActivity.java	(date 1679491098492)
@@ -16,33 +16,13 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        /*ViewGroup group = findViewById(R.id.cl);
-        ImageView original = findViewById(R.id.original_car);
-        ViewGroup.LayoutParams layout = original.getLayoutParams();
-        int firstLane = 220;
-        int id = View.generateViewId();
-
-        ImageView view = new ImageView(this);
-        view.setImageResource(R.drawable.auto_blau_final);
-        view.setId(id);
-        view.setLayoutParams(new ViewGroup.LayoutParams(layout));
-        group.addView(view);
-        ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams)view.getLayoutParams();
-        params.leftToLeft = group.getId();
-        params.topToTop = original.getId();
-        view.requestLayout();
-        /*ImageView banner = findViewById(R.id.original_car);
-        String s = "" + banner.getTranslationZ();
-        Toast toast = Toast.makeText(this, s, Toast.LENGTH_SHORT);
-        toast.show();*/
-
         startGame();
     }
 
     protected void startGame(){
         Button startGameButton = findViewById(R.id.button);
         startGameButton.setOnClickListener(v -> {
-            Game game = new Game(this);
+            new Game(this);
         });
     }
 }
\ No newline at end of file
