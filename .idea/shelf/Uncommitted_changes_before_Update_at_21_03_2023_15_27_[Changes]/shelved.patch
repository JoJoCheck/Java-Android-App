Index: app/src/main/java/com/example/cargame/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cargame;\r\n\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\n\r\npublic class Game {\r\n    public ArrayList<Obstacle>[] lanes = new ArrayList[3];\r\n\r\n    private int gameSpeed;\r\n    private int points;\r\n\r\n    private Timer timer = new Timer();\r\n\r\n    private boolean gameIsRunning;\r\n\r\n    private int time;\r\n\r\n    private Player player;\r\n\r\n    public ViewGroup group;\r\n\r\n\r\n    public Game(ViewGroup group){\r\n\r\n\r\n        lanes[0] = new ArrayList<>();\r\n        lanes[1] = new ArrayList<>();\r\n        lanes[2] = new ArrayList<>();\r\n        player = new Player();\r\n        this.group = group;\r\n\r\n        time = 0;\r\n        gameSpeed = 1;\r\n        points = 0;\r\n        gameIsRunning = true;\r\n\r\n        timer.scheduleAtFixedRate(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                if (gameIsRunning) loop();\r\n            }\r\n        }, 10, 1000/30);\r\n    }\r\n\r\n    public void loop() {\r\n        time++;\r\n\r\n\r\n        moveObstaclesDown();\r\n        carCrash();\r\n        if(time % 10 == 0){\r\n            addObstacleRandom();\r\n        }\r\n\r\n    }\r\n    public void moveObstaclesDown(){\r\n        for(int j = 0; j< 3; j++) {\r\n            for (int i = 0; i < lanes[j].size(); i++) {\r\n                lanes[j].get(i).setPosition(lanes[j].get(i).getPosition() + gameSpeed);\r\n                //Position die vorherige plus eins setzen\r\n                if(lanes[j].get(i).getPosition() == 2400){\r\n                    removeObstacle(j, lanes[j].get(i));\r\n                    //Objekte wenn sie am Rand sind auf null setzen\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void addObstacle(int lane){\r\n        if(lane < 0 || lane > 2){throw new RuntimeException(\"nicht vorhandene Lane\");}\r\n        Obstacle obst = new Obstacle();\r\n        lanes[lane].add(obst);\r\n    }\r\n    public void addObstacleRandom(){\r\n        double lane = Math.random();\r\n        addObstacle((int) (lane * 2));\r\n    }\r\n    public void removeObstacle(int lane, Obstacle obst){\r\n        lanes[lane].remove(obst);\r\n    }\r\n\r\n    public int getGameSpeed() {\r\n        return gameSpeed;\r\n    }\r\n\r\n    public void setGameSpeed(int gameSpeed) {\r\n        this.gameSpeed = gameSpeed;\r\n    }\r\n\r\n    public int getPoints(){\r\n        return points;\r\n    }\r\n\r\n    public void setPoints(int points){\r\n        this.points = points;\r\n    }\r\n\r\n    public void carCrash() {\r\n        if (collision()) {\r\n            gameIsRunning = false;\r\n            System.out.println(\" -- Crash -- \");\r\n        }\r\n    }\r\n\r\n    public boolean collision(){\r\n        for (int i = 0; i < lanes.length; i++){\r\n            if (player.getLane() != i) continue;\r\n            for(Obstacle obstacle : lanes[i]){\r\n                if (obstacle.getPosition() <= 2000 && obstacle.getPosition() >= 2200){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cargame/Game.java b/app/src/main/java/com/example/cargame/Game.java
--- a/app/src/main/java/com/example/cargame/Game.java	(revision 6bd85397fdbe80259a92b7e12e3fc0dd1b8b7fa6)
+++ b/app/src/main/java/com/example/cargame/Game.java	(date 1679408875394)
@@ -1,7 +1,11 @@
 package com.example.cargame;
 
+import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
+import android.widget.LinearLayout;
+
+import androidx.constraintlayout.widget.ConstraintLayout;
 
 import java.util.ArrayList;
 import java.util.Timer;
@@ -38,6 +42,14 @@
         gameSpeed = 1;
         points = 0;
         gameIsRunning = true;
+        group.removeView(group.findViewById(R.id.button));
+
+        ImageView view = new ImageView(group.getContext());
+        view.setImageResource(R.drawable.auto);
+        view.setY(0);
+        view.setX(0);
+        ((ConstraintLayout)group).addView(view);
+
 
         timer.scheduleAtFixedRate(new TimerTask() {
             @Override
@@ -50,10 +62,10 @@
     public void loop() {
         time++;
 
-
+        if (time < 5) updateAll();
         moveObstaclesDown();
         carCrash();
-        if(time % 10 == 0){
+        if(time % 100 == 0){
             addObstacleRandom();
         }
 
@@ -62,10 +74,10 @@
         for(int j = 0; j< 3; j++) {
             for (int i = 0; i < lanes[j].size(); i++) {
                 lanes[j].get(i).setPosition(lanes[j].get(i).getPosition() + gameSpeed);
-                //Position die vorherige plus eins setzen
+                //Position die vorherige plus Speed setzen
                 if(lanes[j].get(i).getPosition() == 2400){
                     removeObstacle(j, lanes[j].get(i));
-                    //Objekte wenn sie am Rand sind auf null setzen
+                    //Objekte wenn sie am Rand sind entfernen
                 }
             }
         }
@@ -75,6 +87,9 @@
         if(lane < 0 || lane > 2){throw new RuntimeException("nicht vorhandene Lane");}
         Obstacle obst = new Obstacle();
         lanes[lane].add(obst);
+
+
+
     }
     public void addObstacleRandom(){
         double lane = Math.random();
@@ -118,4 +133,11 @@
         }
         return false;
     }
+
+    public void updateAll(){
+
+
+
+    }
+
 }
